package by.aston.aqa;
/* Создать классы Собака и Кот с наследованием от класса Животное.
Все животные могут бежать и плыть. В качестве параметра каждому методу передается длина препятствия. Результатом выполнения действия будет печать в консоль. (Например, dogBobik.run(150); -> 'Бобик пробежал 150 м.');
У каждого животного есть ограничения на действия (бег: кот 200 м., собака 500 м.; плавание: кот не умеет плавать, собака 10 м.).
Добавить подсчет созданных котов, собак и животных.
Расширить задачу, добавив для котов возможность кушать из миски, выполнив следующие пункты:
Сделать так, чтобы в миске с едой не могло получиться отрицательного количества еды (например, в миске 10 еды, а кот пытается покушать 15-20).
Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать (хватило еды), сытость = true.
Считаем, что если коту мало еды в миске, то он её просто не трогает, то есть не может быть наполовину сыт (это сделано для упрощения логики программы).
Создать массив котов и миску с едой, попросить всех котов покушать из этой миски и потом вывести информацию о сытости котов в консоль.
Добавить метод, с помощью которого можно было бы добавлять еду в миску. */

public class MainAnimal {
    public static void main(String[] args) {
        Animal animal = new Animal("Дружок");
        Cat catSnow = new Cat("Кот Снежок");
        Dog dogAlex = new Dog("Собака Алекс");
        Dog dogBobik = new Dog("Собака Бобик");
        Food food = new Food(20);
        Cat[] cats = new Cat[4];
        cats[0] = new Cat("Кот Тимофей");
        cats[1] = new Cat("Кот Матроскин");
        cats[2] = new Cat("Кот Белка");
        cats[3] = new Cat("Кот Василий");

        animal.animalInfo();
        animal.run(10, 1000);
        animal.swim(3, 100);
        catSnow.animalInfo();
        catSnow.run(10, 200);
        catSnow.swim(10, 20);
        dogAlex.animalInfo();
        dogAlex.run(52, 500);
        dogAlex.swim(2, 10);
        dogBobik.animalInfo();
        dogBobik.run(520, 500);
        dogBobik.swim(25, 10);
        System.out.println();
        food.addFood(100);
        System.out.println("Еды в миске: " + food.getFood());
        for (Cat cat : cats) {
            System.out.println(cat.eat(10, food));
        }
        System.out.println("Еды в миске: " + food.getFood());
        System.out.println();
        System.out.println("Всего животных: " + Animal.getCount());
        System.out.println("Из них котов: " + Cat.getCatCount());
        System.out.println("Из них собак: " + Dog.getDogCount());
    }
}